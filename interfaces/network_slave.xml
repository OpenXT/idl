<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN" "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node xmlns:tp="http://telepathy.freedesktop.org/wiki/DbusSpec#extensions-v0" name="/">
  <tp:enum name="CONFIG" type="s">
    <tp:docstring>Network types.</tp:docstring>
    <tp:enumvalue suffix="BRIDGE_FILTERING" value="bridge-filtering"/>
    <tp:enumvalue suffix="NM_NETWORKING_ENABLED" value="networking-enabled"/>
    <tp:enumvalue suffix="NM_WIRELESS_ENABLED" value="wifi-enabled"/>
    <tp:enumvalue suffix="NM_UNMANAGED_DEVICES" value="unmanaged-devices"/>
  </tp:enum>
  <!--~~~~~~~~~~~~~~~~~~~~~~
  ~~~~  DBus Interface  ~~~~
  ~~~~~~~~~~~~~~~~~~~~~~~-->
  <interface name="com.citrix.xenclient.networkslave">
    <!--~~~~~~~~~~~~~~~~~~~~~~
    ~~~~  DBus Methods    ~~~~
    ~~~~~~~~~~~~~~~~~~~~~~~-->
    <method name="backend_vif_notify">
      <tp:docstring>Method to notify network slave of a new backend VIF.</tp:docstring>
      <arg type="s" name="vif" direction="in"/>
      <arg type="u" name="domid" direction="in"/>
      <arg type="u" name="devid" direction="in"/>
    </method>
    <method name="create_internal_networks">
      <tp:docstring>Method to create internal networks.</tp:docstring>
      <arg type="u" name="network_number" direction="in"/>
    </method>
    <method name="get_icavm_network">
      <tp:docstring>Returns icavm network object.</tp:docstring>
      <arg type="s" name="icavm_network" direction="out"/>
    </method>
    <method name="is_initialized">
      <tp:docstring>Returns true if the system is initialized.</tp:docstring>
      <arg type="b" name="is_initialized" direction="out"/>
    </method>
    <method name="list_networks">
      <tp:docstring>Lists networks.</tp:docstring>
      <arg type="as" name="networks" direction="out"/>
    </method>
    <method name="list_vifs">
      <tp:docstring>Lists backend VIFs.</tp:docstring>
      <arg type="as" name="vifs" direction="out"/>
    </method>
    <method name="move_vif_to_network">
      <tp:docstring>Move VIF to network.</tp:docstring>
      <arg type="s" name="vif" direction="in"/>
      <arg type="s" name="network" direction="in"/>
    </method>
    <method name="network_iface_notify">
      <tp:docstring>Method to notify network slave of the status of a networking interface. </tp:docstring>
      <arg type="s" name="udev_action" direction="in"/>
      <arg type="s" name="interface" direction="in"/>
    </method>
    <method name="nm_state">
      <tp:docstring>Returns network manager state.</tp:docstring>
      <arg type="u" name="nm_state" direction="out"/>
    </method>
    <method name="nw_connectivity">
      <tp:docstring>Returns true if there is network connectivity.</tp:docstring>
      <arg type="b" name="is_initialized" direction="out"/>
    </method>
    <method name="refresh_vifs">
      <tp:docstring>See that all the backend VIFs are connected to the right networks.</tp:docstring>
    </method>
    <method name="shutdown">
      <tp:docstring>Shuts down the service.</tp:docstring>
    </method>
    <method name="start_nm">
      <tp:docstring>Start Network Manager.</tp:docstring>
    </method>
    <method name="vif_added">
      <tp:docstring>Returns whether the vif has been added to a bridge</tp:docstring>
      <arg type="s" name="vif" direction="in"/>
      <arg type="b" name="added" direction="out"/>
    </method>
  </interface>
  <!--~~~~~~~~~~~~~~~~~~~~~~
  ~~~~  DBus Interface  ~~~~
  ~~~~~~~~~~~~~~~~~~~~~~~-->
  <interface name="com.citrix.xenclient.networkslave.notify">
    <!--~~~~~~~~~~~~~~~~~~~~~~
    ~~~~  DBus Signals    ~~~~
    ~~~~~~~~~~~~~~~~~~~~~~~-->
    <signal name="network_added">
      <tp:docstring>Notifies NWD that a new network is added.</tp:docstring>
      <arg name="network" type="as"/>
    </signal>
    <signal name="network_removed">
      <tp:docstring>Notifies NWD that a network is no longer available.</tp:docstring>
      <arg name="network" type="as"/>
    </signal>
    <signal name="networkslave_up">
      <tp:docstring>Notifies NWD that the slave is up.</tp:docstring>
    </signal>
    <signal name="new_backend_vif">
      <tp:docstring>Notifies NWD that a new backend VIF is added.</tp:docstring>
      <arg name="vif_info" type="as"/>
    </signal>
  </interface>
</node>
