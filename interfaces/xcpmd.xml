<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN" "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node xmlns:tp="http://telepathy.freedesktop.org/wiki/DbusSpec#extensions-v0" name="/">
  <!--~~~~~~~~~~~~~~~~~~~~~~
  ~~~~  DBus Interface  ~~~~
  ~~~~~~~~~~~~~~~~~~~~~~~-->
  <interface name="com.citrix.xenclient.xcpmd">
    <!--~~~~~~~~~~~~~~~~~~~~~~
    ~~~~  DBus Methods    ~~~~
    ~~~~~~~~~~~~~~~~~~~~~~~-->
    <method name="add_rule">
      <tp:docstring>Adds a rule to the policy.</tp:docstring>
      <arg type="s" name="name" direction="in">
        <tp:docstring>The name of the rule to be added.
        </tp:docstring>
      </arg>
      <arg type="s" name="conditions" direction="in">
        <tp:docstring>A space-separated list of conditions,
          each of the form "condition(arg1 arg2 arg3)"
        </tp:docstring>
      </arg>
      <arg type="s" name="actions" direction="in">
        <tp:docstring>A space-separated list of actions,
          each of the form "action(arg1 arg2 arg3)"
        </tp:docstring>
      </arg>
      <arg type="s" name="undo_actions" direction="in">
        <tp:docstring>A space-separated list of actions,
          each of the form "action(arg1 arg2 arg3)"
        </tp:docstring>
      </arg>
    </method>
    <method name="add_var">
      <tp:docstring>Adds or overwrites a variable.</tp:docstring>
      <arg type="s" name="name" direction="in">
        <tp:docstring>The name of the variable to be added.
        </tp:docstring>
      </arg>
      <arg type="s" name="value" direction="in">
        <tp:docstring>The value of the variable to be added.
        </tp:docstring>
      </arg>
    </method>
    <method name="aggregate_battery_percentage">
      <tp:docstring>Returns the remaining charge in percent for the whole system.
      </tp:docstring>
      <arg type="u" name="percentage" direction="out"/>
    </method>
    <method name="aggregate_battery_state">
      <tp:docstring>Returns the charge/discharge state of the whole system, as
        in http://upower.freedesktop.org/docs/Device.html#Device:State.
      </tp:docstring>
      <arg type="u" name="state" direction="out"/>
    </method>
    <method name="aggregate_battery_time_to_empty">
      <tp:docstring>Returns the number of seconds until all batteries in the
        system have fully discharged, or 0 if the system isn't currently
        discharging.
      </tp:docstring>
      <arg type="u" name="time_to_empty" direction="out"/>
    </method>
    <method name="aggregate_battery_time_to_full">
      <tp:docstring>Returns the number of seconds until all batteries in the
        system have fully charged, or 0 if the system isn't currently charging.
      </tp:docstring>
      <arg type="u" name="time_to_full" direction="out"/>
    </method>
    <method name="batteries_present">
      <tp:docstring>Returns a list of indices of the batteries currently present.
      </tp:docstring>
      <arg type="ai" name="batteries" direction="out">
        <tp:docstring>Indices of the batteries currently present.
        </tp:docstring>
      </arg>
    </method>
    <method name="battery_is_present">
      <tp:docstring>Returns the presence of bat_n</tp:docstring>
      <arg type="u" name="bat_n" direction="in">
        <tp:docstring>The battery ID, most likely 0 or 1</tp:docstring>
      </arg>
      <arg type="b" name="is_present" direction="out"/>
    </method>
    <method name="battery_percentage">
      <tp:docstring>Returns the remaining charge in percents for
      bat_n</tp:docstring>
      <arg type="u" name="bat_n" direction="in">
        <tp:docstring>The battery ID, most likely 0 or 1</tp:docstring>
      </arg>
      <arg type="u" name="percentage" direction="out"/>
    </method>
    <method name="battery_state">
      <tp:docstring>Returns the state of bat_n. For the values, see
      http://upower.freedesktop.org/docs/Device.html#Device:State</tp:docstring>
      <arg type="u" name="bat_n" direction="in">
        <tp:docstring>The battery ID, most likely 0 or 1</tp:docstring>
      </arg>
      <arg type="u" name="state" direction="out"/>
    </method>
    <method name="battery_time_to_empty">
      <tp:docstring>Returns when bat_n will be empty, in seconds, or 0
      if the battery is not currently discharging</tp:docstring>
      <arg type="u" name="bat_n" direction="in">
        <tp:docstring>The battery ID, most likely 0 or 1</tp:docstring>
      </arg>
      <arg type="u" name="time_to_empty" direction="out"/>
    </method>
    <method name="battery_time_to_full">
      <tp:docstring>Returns when bat_n will be full, in seconds, or 0
      if the battery is not currently charging</tp:docstring>
      <arg type="u" name="bat_n" direction="in">
        <tp:docstring>The battery ID, most likely 0 or 1</tp:docstring>
      </arg>
      <arg type="u" name="time_to_full" direction="out"/>
    </method>
    <method name="clear_policy">
      <tp:docstring>Removes all loaded rules and variables.
      </tp:docstring>
    </method>
    <method name="clear_rules">
      <tp:docstring>Removes all loaded rules.
      </tp:docstring>
    </method>
    <method name="clear_vars">
      <tp:docstring>Removes all loaded variables that are not currently being
        used by rules.
      </tp:docstring>
    </method>
    <method name="get_ac_adapter_state">
      <tp:docstring>Returns AC adapter state.  A value of 1 means AC adapter in use, else 0.</tp:docstring>
      <arg type="u" name="ac_ret" direction="out"/>
    </method>
    <method name="get_actions">
      <tp:docstring>Returns the list of currently available 
        actions.</tp:docstring>
      <arg type="as" name="actions" direction="out">
        <tp:docstring>An array of human-readable descriptions
          of currently available actions.</tp:docstring>
      </arg>
    </method>
    <method name="get_bif">
      <tp:docstring>Returns battery information as string.</tp:docstring>
      <arg type="s" name="bif_ret" direction="out"/>
    </method>
    <method name="get_bst">
      <tp:docstring>Returns battery status as string.</tp:docstring>
      <arg type="s" name="bst_ret" direction="out"/>
    </method>
    <method name="get_conditions">
      <tp:docstring>Returns the list of currently available 
        conditions.</tp:docstring>
      <arg type="as" name="conditions" direction="out">
        <tp:docstring>An array of human-readable descriptions
          of currently available conditions.</tp:docstring>
      </arg>
    </method>
    <method name="get_critical_temperature">
      <tp:docstring>Returns current critical platform temperature.</tp:docstring>
      <arg type="u" name="crit_temp_ret" direction="out"/>
    </method>
    <method name="get_current_battery_level">
      <tp:docstring>Returns current battery level. 0 when normal, 1 for warning, 2 for low and 3 for critical.</tp:docstring>
      <arg type="u" name="battery_level" direction="out"/>
    </method>
    <method name="get_current_temperature">
      <tp:docstring>Returns current platform temperature.</tp:docstring>
      <arg type="u" name="cur_temp_ret" direction="out"/>
    </method>
    <method name="get_rules">
      <tp:docstring>Returns the list of currently loaded rules.
      </tp:docstring>
      <arg type="as" name="rules" direction="out">
        <tp:docstring>An array of human-readable descriptions
          of currently loaded rules.</tp:docstring>
      </arg>
    </method>
    <method name="get_vars">
      <tp:docstring>Returns the list of currently loaded variables.
      </tp:docstring>
      <arg type="as" name="vars" direction="out">
        <tp:docstring>An array of human-readable descriptions
          of currently loaded variables.</tp:docstring>
      </arg>
    </method>
    <method name="hotkey_switch">
      <tp:docstring>Called to switch hotkey mapping values.</tp:docstring>
      <arg type="b" name="reset" direction="in">
        <tp:docstring>TRUE to reset to boot time value, FALSE to set to platform specific value</tp:docstring>
      </arg>
    </method>
    <method name="indicate_input">
      <tp:docstring>Called to indicate KB and other input values of interest.</tp:docstring>
      <arg type="i" name="input_value" direction="in">
        <tp:docstring>Input values (since enum not implemented): INPUT_SLEEP=1 INPUT_BRIGHTNESSUP=2 INPUT_BRIGHTNESSDOWN=3.</tp:docstring>
      </arg>
    </method>
    <method name="load_policy_from_db">
      <tp:docstring>Loads the rules and variables available in the DB.
      </tp:docstring>
    </method>
    <method name="load_policy_from_file">
      <tp:docstring>Loads a set of rules and variables from the specified file.
      </tp:docstring>
      <arg type="s" name="filename" direction="in">
        <tp:docstring>Absolute path to the policy file.
        </tp:docstring>
      </arg>
    </method>
    <method name="remove_rule">
      <tp:docstring>Removes the rule with the specified name from
        the policy.
      </tp:docstring>
      <arg type="s" name="rule_name" direction="in">
        <tp:docstring>The name of the rule to be removed.
        </tp:docstring>
      </arg>
    </method>
    <method name="remove_var">
      <tp:docstring>Removes a variable.</tp:docstring>
      <arg type="s" name="name" direction="in">
        <tp:docstring>The name of the variable to be removed.
        </tp:docstring>
      </arg>
    </method>
    <!--~~~~~~~~~~~~~~~~~~~~~~
    ~~~~  DBus Signals    ~~~~
    ~~~~~~~~~~~~~~~~~~~~~~~-->
    <signal name="ac_adapter_state_changed">
      <tp:docstring>Signals change in platform AC adapter status.</tp:docstring>
    </signal>
    <signal name="battery_info_changed">
      <tp:docstring>Signals change in platform battery information.</tp:docstring>
    </signal>
    <signal name="battery_level_notification">
      <tp:docstring>Signals when battery level changes from normal.</tp:docstring>
    </signal>
    <signal name="battery_status_changed">
      <tp:docstring>Signals change in platform battery status.</tp:docstring>
    </signal>
    <signal name="bcl_key_pressed">
      <tp:docstring>Signals when brightness control hotkeys are pressed.</tp:docstring>
    </signal>
    <signal name="num_batteries_changed">
      <tp:docstring>Signals change in number of batteries present.</tp:docstring>
    </signal>
    <signal name="oem_event_triggered">
      <tp:docstring>Signals when OEM special buttons/hotkeys are pressed.</tp:docstring>
    </signal>
    <signal name="power_button_pressed">
      <tp:docstring>Signals when power button is pressed.</tp:docstring>
    </signal>
    <signal name="sleep_button_pressed">
      <tp:docstring>Signals when sleep button is pressed.</tp:docstring>
    </signal>
  </interface>
</node>
