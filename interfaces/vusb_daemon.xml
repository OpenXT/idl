<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN" "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<node name="/" xmlns:tp="http://telepathy.freedesktop.org/wiki/DbusSpec#extensions-v0">
	<interface name="com.citrix.xenclient.usbdaemon">
		<tp:docstring>Interface to the USB policy daemon.</tp:docstring>
		<method name="get_policy_domuuid">
			<tp:docstring>Query the USB device policy for a specified VM.</tp:docstring>
			<arg name="uuid" type="s" direction="in">
				<tp:docstring>UUID of VM to query policy for.</tp:docstring>
			</arg>
			<arg name="value" type="s" direction="out">
				<tp:docstring>Policy for specified VM, as XML.</tp:docstring>
			</arg>
		</method>
		<method name="set_policy_domuuid">
			<tp:docstring>Set the USB device policy for a specified VM.</tp:docstring>
			<arg name="uuid" type="s" direction="in">
				<tp:docstring>UUID of VM to query policy for.</tp:docstring>
			</arg>
			<arg name="policy" type="s" direction="in">
				<tp:docstring>Policy for specified VM, as XML.</tp:docstring>
			</arg>
		</method>

		<method name="new_vm">
			<tp:docstring>Tell daemon a new VM has been started.</tp:docstring>
			<arg name="dom_id" type="i" direction="in">
				<tp:docstring>ID of newly started VM.</tp:docstring>
			</arg>
		</method>


		<method name="vm_stopped">
			<tp:docstring>Tell daemon a VM is stopping.</tp:docstring>
			<arg name="dom_id" type="i" direction="in">
				<tp:docstring>ID of stopping VM.</tp:docstring>
			</arg>
		</method>

		<method name="list_devices">
			<tp:docstring>Enumerate the USB devices plugged into the system.</tp:docstring>
			<arg name="devices" type="ai" direction="out">
				<tp:docstring>List of IDs of devices in the system.</tp:docstring>
			</arg>
		</method>

		<method name="get_device_info">
		<tp:docstring><p>Connection states are defined as follows:</p>
		<ul>
		<li>-1  Cannot find device</li>
		<li>0  Device not in use by any VM</li>
		<li>1  Assigned to another VM which is off</li>
		<li>2  Assigned to another VM which is running</li>
		<li>3  Blocked by policy for specified VM</li>
		<li>4  In use by specified VM</li>
		<li>5  In use by specified VM and flagged "sticky"</li>
		<li>6  Flagged as "sticky" assigned to specified VM, but not currently in use</li>
		<li>7  Special platform device, listed purely for information</li>
		<li>8  HiD device in use by dom0</li>
		<li>9  HiD device in use by dom0, but "sticky" assigned to an off VM</li>
		<li>10 External CD drive in use by dom0</li>
		<li>11 External CD drive in use by dom0, but "sticky" assigned to an off VM</li>
		</ul>
		</tp:docstring>
			<arg name="dev_id" type="i" direction="in"><tp:docstring>ID of device to query.</tp:docstring>
			</arg>
			<arg name="vm_uuid" type="s" direction="in"> <tp:docstring>UUID of VM to get information relative to.</tp:docstring>
			</arg>
			<arg name="name" type="s" direction="out"><tp:docstring>Name of device.</tp:docstring>
			</arg>
			<arg name="state" type="i" direction="out"><tp:docstring>Connection state of device.</tp:docstring>
			</arg>
			<arg name="vm_assigned" type="s" direction="out"><tp:docstring>UUID of VM device is assigned to (if any).</tp:docstring>
			</arg>
			<arg name="detail" type="s" direction="out"><tp:docstring>Name detail, for mouse-over text.</tp:docstring>
			</arg>
		</method>

		<method name="assign_device">
			<tp:docstring>Assign a device to a VM.</tp:docstring>
			<arg name="dev_id" type="i" direction="in">
				<tp:docstring>id of device to assign</tp:docstring>
			</arg>
			<arg name="vm_uuid" type="s" direction="in">
				<tp:docstring>UUID of VM to assign device to.</tp:docstring>
			</arg>
		</method>

		<method name="unassign_device">
			<tp:docstring>Unassign a device from a VM.</tp:docstring>
			<arg name="dev_id" type="i" direction="in">
				<tp:docstring>ID of device to unassign.</tp:docstring>
			</arg>
		</method>

		<method name="set_sticky">
			<tp:docstring>Set or clear the sticky assignment flag for a device.</tp:docstring>
			<arg name="dev_id" type="i" direction="in">
				<tp:docstring>ID of device to alter sticky flag for.</tp:docstring>
			</arg>
			<arg name="sticky" type="i" direction="in">
				<tp:docstring>Set (1), or clear (0) sticky flag.</tp:docstring>
			</arg>
		</method>

		<method name="name_device">
			<tp:docstring>Set the user visible name for a device.</tp:docstring>
			<arg name="dev_id" type="i" direction="in">
				<tp:docstring>ID of device to set name for.</tp:docstring>
			</arg>
			<arg name="name" type="s" direction="in">
				<tp:docstring>name to set for device</tp:docstring>
			</arg>
		</method>

		<method name="state">
			<tp:docstring>Dump daemon state, for debugging only.</tp:docstring>
			<arg name="state" type="s" direction="out">
				<tp:docstring>Daemon state in human readable form.</tp:docstring>
			</arg>
		</method>

		<signal name="device_added">
			<tp:docstring>A device was just added to the list</tp:docstring>
			<arg name="dev_id" type="i">
				<tp:docstring>ID of the new device</tp:docstring>
			</arg>
		</signal>

		<method name="reload_policy">
			<tp:docstring>Reload the policy rules from the database</tp:docstring>
		</method>

		<signal name="device_rejected">
			<tp:docstring>A USB device has been rejected due to a policy.</tp:docstring>
			<arg name="device_name" type="s">
				<tp:docstring>User-friendly name of device rejected</tp:docstring>
			</arg>
			<arg name="reason" type="s">
				<tp:docstring>Human-readable description of reason for rejection</tp:docstring>
			</arg>
		</signal>

		<signal name="optical_device_detected">
			<tp:docstring>Signal that we have a new optical device and refresh the host model.</tp:docstring>
		</signal>
		<signal name="devices_changed">
			<tp:docstring>Device list previously given out may be out of date, re-enumerate.</tp:docstring>
		</signal>

		<signal name="device_info_changed">
			<tp:docstring>Information previously given out regarding device may be out of date, re-query.</tp:docstring>
			<arg name="dev_id" type="i">
				<tp:docstring>ID of device needing re-query.</tp:docstring>
			</arg>
		</signal>
	</interface>
</node>
